version: '3.8'

services:
  updater:
    build:
      context: ./updater
      dockerfile: Dockerfile
    volumes:
      - ./updater:/updater
      - cargo-cache:/usr/local/cargo/registry
      - ${SHARED_STORAGE_PATH}:/shared_storage
    working_dir: /updater
    restart: always
    environment:
      - RUST_LOG=debug
      - WOOCOMMERCE_URL=${WOOCOMMERCE_URL}
      - WOOCOMMERCE_CONSUMER_KEY=${WOOCOMMERCE_CONSUMER_KEY}
      - WOOCOMMERCE_CONSUMER_SECRET=${WOOCOMMERCE_CONSUMER_SECRET}
      - REDIS_URL=${REDIS_URL}
      - REDIS_PORT=${REDIS_PORT}
      - RABBITMQ_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@rabbitmq:${RABBITMQ_PORT}
      - SHARED_STORAGE_PATH=/shared_storage
    depends_on:
      - redis
      - rabbitmq
    command: ["cargo", "run"]
    extra_hosts:
      - "wptest.local:192.168.97.83"
      - "another.local:192.168.97.83"

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: always
    ports:
      - "${API_PORT}:${API_PORT}"
    volumes:
      - ./api:/app
      - /app/node_modules
      - ${SHARED_STORAGE_PATH}:/shared_storage
    environment:
      - NODE_ENV=development
      - REDIS_URL=${REDIS_URL}
      - REDIS_PORT=${REDIS_PORT}
      - RABBITMQ_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@rabbitmq:${RABBITMQ_PORT}
      - SHARED_STORAGE_PATH=/shared_storage
      - API_PORT=${API_PORT}
    depends_on:
      - redis
      - rabbitmq
      - updater
    command: ["npm", "run", "dev"]
    extra_hosts:
      - "wptest.local:192.168.97.83"
      - "another.local:192.168.97.83"

  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "${RABBITMQ_PORT}:5672"      # AMQP port
      - "${RABBITMQ_UI_PORT}:15672"  # Management UI port
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  cargo-cache:
  redis-data:
  shared_storage:
  rabbitmq-data:
